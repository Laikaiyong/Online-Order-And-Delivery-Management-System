/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view.deliveryStaff;

import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Category;
import model.Feedback;
import model.Item;
import model.Order;
import service.GeneraFileHandler;
import service.ShoppingController;
import view.Auth;
import view.PopUp;

/**
 *
 * @author USER
 */
public class OrderDelivery extends javax.swing.JFrame {
    private int recordNumber = 0;
    
    /**
     * Creates new form OrderDelivery
     */
    public OrderDelivery() {
        initComponents();
        setupComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        exitButton3 = new javax.swing.JButton();
        orderDeliveryHyperlink = new javax.swing.JLabel();
        deliveryQueueHyperlink = new javax.swing.JLabel();
        Orders = new javax.swing.JTabbedPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        orderTable = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        feedbackTable = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        orderProducts = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        updateButton1 = new javax.swing.JButton();
        orderIdText = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        productsText = new javax.swing.JLabel();
        customerNameText = new javax.swing.JLabel();
        totalPriceText = new javax.swing.JLabel();
        staffText = new javax.swing.JLabel();
        createdText = new javax.swing.JLabel();
        deliveryStatusCombo = new javax.swing.JComboBox<>();
        paidStatusToggle = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(255, 204, 102));
        jPanel2.setForeground(new java.awt.Color(255, 204, 153));

        exitButton3.setFont(new java.awt.Font("Poppins", 1, 12)); // NOI18N
        exitButton3.setText("Exit");
        exitButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButton3ActionPerformed(evt);
            }
        });

        orderDeliveryHyperlink.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        orderDeliveryHyperlink.setText("Order Delivery");
        orderDeliveryHyperlink.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                orderDeliveryHyperlinkMouseClicked(evt);
            }
        });

        deliveryQueueHyperlink.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        deliveryQueueHyperlink.setText("Delivery Queue");
        deliveryQueueHyperlink.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deliveryQueueHyperlinkMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(exitButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(21, 21, 21))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(deliveryQueueHyperlink, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                        .addContainerGap())
                    .addComponent(orderDeliveryHyperlink, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(106, 106, 106)
                .addComponent(deliveryQueueHyperlink, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(153, 153, 153)
                .addComponent(orderDeliveryHyperlink, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 177, Short.MAX_VALUE)
                .addComponent(exitButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        orderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "id", "products", "customer", "total price", "delivery status", "paid", "created", "staff"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class, java.lang.String.class, java.lang.Boolean.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        orderTable.getTableHeader().setReorderingAllowed(false);
        orderTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                orderTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(orderTable);

        Orders.addTab("Orders", jScrollPane2);

        feedbackTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "id", "review", "rating", "customer name", "order id"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        feedbackTable.getTableHeader().setReorderingAllowed(false);
        feedbackTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                feedbackTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(feedbackTable);

        Orders.addTab("Feedback", jScrollPane3);

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        orderProducts.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        orderProducts.setText("Products");

        jLabel7.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        jLabel7.setText("ID:");

        jLabel9.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        jLabel9.setText("Customer");

        jLabel10.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        jLabel10.setText("Total Price");

        jLabel11.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        jLabel11.setText("Paid");

        updateButton1.setBackground(new java.awt.Color(102, 102, 255));
        updateButton1.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        updateButton1.setForeground(new java.awt.Color(255, 255, 255));
        updateButton1.setText("Update");
        updateButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButton1ActionPerformed(evt);
            }
        });

        orderIdText.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        orderIdText.setText("-");

        jLabel30.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        jLabel30.setText("Staff");

        jLabel31.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        jLabel31.setText("Delivery Status:");

        jLabel32.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        jLabel32.setText("Created");

        productsText.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        productsText.setText("-");

        customerNameText.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        customerNameText.setText("-");

        totalPriceText.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        totalPriceText.setText("-");

        staffText.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        staffText.setText("-");

        createdText.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        createdText.setText("-");

        deliveryStatusCombo.setFont(new java.awt.Font("Poppins", 0, 11)); // NOI18N
        deliveryStatusCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        paidStatusToggle.setText("paid");
        paidStatusToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paidStatusToggleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator3)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(customerNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(totalPriceText, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(paidStatusToggle))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(orderIdText, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(orderProducts, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(productsText, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(staffText, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(185, 185, 185)
                                .addComponent(updateButton1))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(createdText, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(deliveryStatusCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 166, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(orderIdText))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(orderProducts)
                    .addComponent(productsText))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(customerNameText))
                .addGap(34, 34, 34)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(totalPriceText))
                .addGap(31, 31, 31)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(paidStatusToggle))
                .addGap(21, 21, 21)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(staffText))
                .addGap(31, 31, 31)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32)
                    .addComponent(createdText))
                .addGap(24, 24, 24)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31)
                    .addComponent(deliveryStatusCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addComponent(updateButton1)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Orders, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Orders, javax.swing.GroupLayout.PREFERRED_SIZE, 536, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButton3ActionPerformed
        int reply = new PopUp()
        .confirmationDialog(
            "Exit confirmation",
            "Are you sure you want to logout?"
        );
        if (reply == JOptionPane.YES_OPTION)
        {
            dispose();
            new Auth().setVisible(true);
        }
    }//GEN-LAST:event_exitButton3ActionPerformed

    private void orderDeliveryHyperlinkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_orderDeliveryHyperlinkMouseClicked
        dispose();
        new OrderDelivery().setVisible(true);
    }//GEN-LAST:event_orderDeliveryHyperlinkMouseClicked

    private void deliveryQueueHyperlinkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deliveryQueueHyperlinkMouseClicked
        dispose();
        new DeliveryQueue().setVisible(true);
    }//GEN-LAST:event_deliveryQueueHyperlinkMouseClicked

    private void orderTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_orderTableMouseClicked
        try
        {
            int selectedRow = orderTable.getSelectedRow();
            if (selectedRow >= 0)
            {
                manipulateForm(selectedRow);
//                String selectedOrderId = String.valueOf(
//                    orderTable.getModel().getValueAt(selectedRow, 0)
//                );
//                for(Booking record: bookings)
//                {
//                    if(record.getBookingId().equals(selectedBookingId))
//                    {
//                        recordNumber = selectedRow;
//                        System.out.println(record);
//                        manipulateForm(recordNumber);
//                        break;
//                    }
//                }
            }
        }
        catch(NumberFormatException excep)
        {
            System.err.println("No row being selected");
        }
    }//GEN-LAST:event_orderTableMouseClicked

    private void feedbackTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_feedbackTableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_feedbackTableMouseClicked

    private void updateButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButton1ActionPerformed
        ShoppingController controller = new Auth().shoppingController;
        ArrayList<Order> orders = controller.orders;
        Order order = controller.filteredOrderById(orderIdText.getText());
        int index = orders.indexOf(order);
        order.setDeliveryStatus((String) deliveryStatusCombo.getModel().getSelectedItem());
        order.setPaidStatus(paidStatusToggle.getModel().isSelected());
        
        orders.set(index, order);
        
        new GeneraFileHandler().updateOrderFile(orders);
        
        dispose();
        new OrderDelivery().setVisible(true);
    }//GEN-LAST:event_updateButton1ActionPerformed

    private void paidStatusToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paidStatusToggleActionPerformed
//
    }//GEN-LAST:event_paidStatusToggleActionPerformed

    
    private void setupComponents()
    {
        ArrayList<Order> orders = new Auth().shoppingController.orders;
        ArrayList<Feedback> feedback = new Auth().shoppingController.feedback;
        DefaultTableModel tableModel =  (DefaultTableModel) orderTable.getModel();
        tableModel.setRowCount(0);
        
         DefaultTableModel tableModel1 =  (DefaultTableModel) feedbackTable.getModel();
        tableModel1.setRowCount(0);
        try {
            for (Order order: orders)
            {
                String orderProducts = "";
                for (Item item: order.getProducts())
                {
                    System.out.println(item);
                    orderProducts += item.getProductName() + ", ";
                }
                
                if (order.getStaff().getPersonalId().equals(new Auth().userController.loginedUserId))
                {
                    tableModel.addRow(
                    new Object[]
                        {
                            order.getRecordId(),
                            orderProducts,
                            order.getCustomer().getUsername(),
                            order.getTotalPrice(),
                            order.getDeliveryStatus(),
                            order.getPaidStatus(),
                            order.getCreated().toString(),
                            order.getStaff().getUsername()
                        }
                    );
                }
            }
            
            for (Feedback fb: feedback)
            {
                tableModel1.addRow(
                    new Object[]
                        {
                            fb.getFeedbackId(),
                            fb.getReview(),
                            fb.getRating(),
                            fb.getCustomerName(),
                            fb.getOrderId()
                        }
                );
            }
            manipulateForm(recordNumber);
        } catch (Exception e) {
            System.err.println(e);
        }
    }
    
     private void manipulateForm(int index)
    {
        ArrayList<Order> orders = new Auth().shoppingController.filteredOrderByStaff(new Auth().userController.loginedUserId);
        ArrayList<String> deliveryStatuses = new ArrayList<>();
        
        // Combobox
        deliveryStatuses.add("Pending");
        deliveryStatuses.add("Delivered");
        deliveryStatuses.add("Out for Delivery");

        deliveryStatusCombo.removeAllItems();
        deliveryStatusCombo.setModel(new DefaultComboBoxModel<>(deliveryStatuses.toArray(String[]::new)));
        // Set Record Number to valid number        
        recordNumber = index;
        if(recordNumber >= orders.size())
        {
            recordNumber = 0;
        }
        else
        {
            if(recordNumber < 0)
            {
                recordNumber = orders.size() - 1;
            }
        }
            
        if(!orders.isEmpty())
        {
            orderIdText.setText(orders.get(recordNumber).getRecordId());
            
            String orderProducts = "";
            for (Item item: orders.get(recordNumber).getProducts())
            {
                System.out.println(item);
                orderProducts += item.getProductName() + ", ";
            }
            productsText.setText(orderProducts);
            customerNameText.setText(orders.get(recordNumber).getCustomer().getUsername());
            totalPriceText.setText(Float.toString(orders.get(recordNumber).getTotalPrice()));
            paidStatusToggle.setSelected(orders.get(recordNumber).getPaidStatus());
            staffText.setText(orders.get(recordNumber).getStaff().getUsername());
            createdText.setText(orders.get(recordNumber).getCreated().toString());
            deliveryStatusCombo.getModel().setSelectedItem(orders.get(recordNumber).getDeliveryStatus());
        }
        //  No booking records loaded      
        else
        {
            orderIdText.setText("-");
            productsText.setText("-");
            customerNameText.setText("-");
            totalPriceText.setText("-");
            paidStatusToggle.setSelected(false);
            staffText.setText("-");
            createdText.setText("-");
            deliveryStatusCombo.getModel().setSelectedItem("-");
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OrderDelivery.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OrderDelivery.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OrderDelivery.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OrderDelivery.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OrderDelivery().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane Orders;
    private javax.swing.JLabel createdText;
    private javax.swing.JLabel customerNameText;
    private javax.swing.JLabel deliveryQueueHyperlink;
    private javax.swing.JComboBox<String> deliveryStatusCombo;
    private javax.swing.JButton exitButton3;
    private javax.swing.JTable feedbackTable;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JLabel orderDeliveryHyperlink;
    private javax.swing.JLabel orderIdText;
    private javax.swing.JLabel orderProducts;
    private javax.swing.JTable orderTable;
    private javax.swing.JToggleButton paidStatusToggle;
    private javax.swing.JLabel productsText;
    private javax.swing.JLabel staffText;
    private javax.swing.JLabel totalPriceText;
    private javax.swing.JButton updateButton1;
    // End of variables declaration//GEN-END:variables
}
